services:
  # Redis Service
  - type: redis
    name: laravel-redis
    plan: starter
    maxmemoryPolicy: allkeys-lru
    ipAllowList:
      - source: 0.0.0.0/0
        description: Allow all

  # Web Service (Laravel App)
  - type: web
    name: laravel-app
    runtime: node
    plan: starter
    buildCommand: |
      curl -sS https://getcomposer.org/installer | php
      php composer.phar install --no-dev --optimize-autoloader
      npm ci
      npm run build
      php artisan config:cache
      php artisan route:cache
      php artisan view:cache
    startCommand: |
      php artisan migrate --force
      php artisan serve --host=0.0.0.0 --port=$PORT
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: APP_KEY
        generateValue: true
      - key: APP_URL
        fromService:
          type: web
          name: laravel-app
          property: host
      - key: LOG_CHANNEL
        value: stderr
      - key: DB_CONNECTION
        value: pgsql
      - key: DB_HOST
        fromDatabase:
          name: laravel-db
          property: host
      - key: DB_PORT
        fromDatabase:
          name: laravel-db
          property: port
      - key: DB_DATABASE
        fromDatabase:
          name: laravel-db
          property: database
      - key: DB_USERNAME
        fromDatabase:
          name: laravel-db
          property: user
      - key: DB_PASSWORD
        fromDatabase:
          name: laravel-db
          property: password
      - key: CACHE_DRIVER
        value: redis
      - key: SESSION_DRIVER
        value: redis
      - key: QUEUE_CONNECTION
        value: redis
      - key: REDIS_URL
        fromService:
          type: redis
          name: laravel-redis
          property: connectionString
    healthCheckPath: /health

  # Background Worker (Queue Processing)
  - type: worker
    name: laravel-worker
    runtime: node
    plan: starter
    buildCommand: |
      curl -sS https://getcomposer.org/installer | php
      php composer.phar install --no-dev --optimize-autoloader
    startCommand: php artisan queue:work --verbose --tries=3 --timeout=90
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: APP_KEY
        sync: false
      - key: DB_CONNECTION
        value: pgsql
      - key: DB_HOST
        fromDatabase:
          name: laravel-db
          property: host
      - key: DB_PORT
        fromDatabase:
          name: laravel-db
          property: port
      - key: DB_DATABASE
        fromDatabase:
          name: laravel-db
          property: database
      - key: DB_USERNAME
        fromDatabase:
          name: laravel-db
          property: user
      - key: DB_PASSWORD
        fromDatabase:
          name: laravel-db
          property: password
      - key: QUEUE_CONNECTION
        value: redis
      - key: REDIS_URL
        fromService:
          type: redis
          name: laravel-redis
          property: connectionString

  # Cron Jobs (Task Scheduling)
  - type: cron
    name: laravel-scheduler
    runtime: node
    plan: starter
    buildCommand: |
      curl -sS https://getcomposer.org/installer | php
      php composer.phar install --no-dev --optimize-autoloader
    schedule: "* * * * *"
    startCommand: php artisan schedule:run
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: APP_KEY
        sync: false
      - key: DB_CONNECTION
        value: pgsql
      - key: DB_HOST
        fromDatabase:
          name: laravel-db
          property: host
      - key: DB_PORT
        fromDatabase:
          name: laravel-db
          property: port
      - key: DB_DATABASE
        fromDatabase:
          name: laravel-db
          property: database
      - key: DB_USERNAME
        fromDatabase:
          name: laravel-db
          property: user
      - key: DB_PASSWORD
        fromDatabase:
          name: laravel-db
          property: password
      - key: REDIS_URL
        fromService:
          type: redis
          name: laravel-redis
          property: connectionString

databases:
  - name: laravel-db
    databaseName: laravel_production
    user: laravel_user
    plan: starter
